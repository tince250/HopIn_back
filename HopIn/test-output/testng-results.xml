<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-06T02:15:59 CET" name="Default suite" finished-at="2023-02-06T02:16:22 CET" duration-ms="23864">
    <groups>
    </groups>
    <test started-at="2023-02-06T02:15:59 CET" name="Default test" finished-at="2023-02-06T02:16:22 CET" duration-ms="23864">
      <class name="com.hopin.HopIn.services.RideServiceTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:15:59 CET" name="springTestContextBeforeTestClass" finished-at="2023-02-06T02:15:59 CET" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:15:59 CET" name="springTestContextPrepareTestInstance" finished-at="2023-02-06T02:16:22 CET" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="23241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextBeforeTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldAcceptRide()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="setup" finished-at="2023-02-06T02:16:22 CET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldAcceptRide()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="shouldAcceptRide" finished-at="2023-02-06T02:16:22 CET" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldAcceptRide -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextAfterTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldAcceptRide()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextBeforeTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldDeleteFavoriteRideForExistingId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="setup" finished-at="2023-02-06T02:16:22 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldDeleteFavoriteRideForExistingId()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="shouldDeleteFavoriteRideForExistingId" finished-at="2023-02-06T02:16:22 CET" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDeleteFavoriteRideForExistingId -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextAfterTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldDeleteFavoriteRideForExistingId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextBeforeTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldGetRideForExistingId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="setup" finished-at="2023-02-06T02:16:22 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldGetRideForExistingId()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="shouldGetRideForExistingId" finished-at="2023-02-06T02:16:22 CET" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGetRideForExistingId -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextAfterTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldGetRideForExistingId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextBeforeTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldStartRideForExistingRideWithStatusAccepted()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="setup" finished-at="2023-02-06T02:16:22 CET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldStartRideForExistingRideWithStatusAccepted()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="shouldStartRideForExistingRideWithStatusAccepted" finished-at="2023-02-06T02:16:22 CET" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldStartRideForExistingRideWithStatusAccepted -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextAfterTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldStartRideForExistingRideWithStatusAccepted()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextBeforeTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldThrowExceptionForAcceptingRideWithBadStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="setup" finished-at="2023-02-06T02:16:22 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldThrowExceptionForAcceptingRideWithBadStatus()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="shouldThrowExceptionForAcceptingRideWithBadStatus" finished-at="2023-02-06T02:16:22 CET" duration-ms="16" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method RideServiceTest.shouldThrowExceptionForAcceptingRideWithBadStatus()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe] should have thrown an exception of type class org.springframework.web.server.ResponseStatusException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method RideServiceTest.shouldThrowExceptionForAcceptingRideWithBadStatus()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe] should have thrown an exception of type class org.springframework.web.server.ResponseStatusException
at org.testng.internal.invokers.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:81)
at org.testng.internal.invokers.TestInvoker.considerExceptions(TestInvoker.java:866)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:727)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowExceptionForAcceptingRideWithBadStatus -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextAfterTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldThrowExceptionForAcceptingRideWithBadStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextBeforeTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldThrowExceptionForAcceptingRideWithNonExistingId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="shouldThrowExceptionForAcceptingRideWithNonExistingId()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="shouldThrowExceptionForAcceptingRideWithNonExistingId" finished-at="2023-02-06T02:16:22 CET" duration-ms="13" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method RideServiceTest.shouldThrowExceptionForAcceptingRideWithNonExistingId()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe] should have thrown an exception of type class org.springframework.web.server.ResponseStatusException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method RideServiceTest.shouldThrowExceptionForAcceptingRideWithNonExistingId()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe] should have thrown an exception of type class org.springframework.web.server.ResponseStatusException
at org.testng.internal.invokers.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:81)
at org.testng.internal.invokers.TestInvoker.considerExceptions(TestInvoker.java:866)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:727)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowExceptionForAcceptingRideWithNonExistingId -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="setup" finished-at="2023-02-06T02:16:22 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextAfterTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldThrowExceptionForAcceptingRideWithNonExistingId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextBeforeTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldThrowExceptionForNonExistingFavoriteRideId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="setup" finished-at="2023-02-06T02:16:22 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldThrowExceptionForNonExistingFavoriteRideId()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="shouldThrowExceptionForNonExistingFavoriteRideId" finished-at="2023-02-06T02:16:22 CET" duration-ms="6" status="PASS">
          <exception class="com.hopin.HopIn.exceptions.FavoriteRideException">
            <full-stacktrace>
              <![CDATA[com.hopin.HopIn.exceptions.FavoriteRideException
at com.hopin.HopIn.services.RideServiceImpl.deleteFavoriteRide(RideServiceImpl.java:220)
at com.hopin.HopIn.services.RideServiceTest.shouldThrowExceptionForNonExistingFavoriteRideId(RideServiceTest.java:151)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:258)
at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:154)
at org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.hopin.HopIn.exceptions.FavoriteRideException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowExceptionForNonExistingFavoriteRideId -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextAfterTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldThrowExceptionForNonExistingFavoriteRideId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextBeforeTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldThrowExceptionForNonExistingRideId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="setup" finished-at="2023-02-06T02:16:22 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shouldThrowExceptionForNonExistingRideId()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="shouldThrowExceptionForNonExistingRideId" finished-at="2023-02-06T02:16:22 CET" duration-ms="2" status="PASS">
          <exception class="com.hopin.HopIn.exceptions.RideNotFoundException">
            <full-stacktrace>
              <![CDATA[com.hopin.HopIn.exceptions.RideNotFoundException
at com.hopin.HopIn.services.RideServiceImpl.getRide(RideServiceImpl.java:511)
at com.hopin.HopIn.services.RideServiceTest.shouldThrowExceptionForNonExistingRideId(RideServiceTest.java:120)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:258)
at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:154)
at org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.hopin.HopIn.exceptions.RideNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowExceptionForNonExistingRideId -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextAfterTestMethod" finished-at="2023-02-06T02:16:22 CET" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.hopin.HopIn.services.RideServiceTest.shouldThrowExceptionForNonExistingRideId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:com.hopin.HopIn.services.RideServiceTest@7e3f95fe]" started-at="2023-02-06T02:16:22 CET" name="springTestContextAfterTestClass" finished-at="2023-02-06T02:16:22 CET" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.hopin.HopIn.services.RideServiceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
